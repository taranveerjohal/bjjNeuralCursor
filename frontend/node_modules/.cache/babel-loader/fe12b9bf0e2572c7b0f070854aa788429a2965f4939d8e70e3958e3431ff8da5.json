{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PoseTesting=()=>{const videoRef=useRef(null);const canvasRef=useRef(null);const[poseNet,setPoseNet]=useState(null);const[neuralNetwork,setNeuralNetwork]=useState(null);const[isModelLoaded,setIsModelLoaded]=useState(false);const[isDetecting,setIsDetecting]=useState(false);const[currentPose,setCurrentPose]=useState(null);const[prediction,setPrediction]=useState(null);const[isClassifying,setIsClassifying]=useState(false);const[logs,setLogs]=useState([]);// Initialize models\nuseEffect(()=>{const initModels=async()=>{try{if(window.ml5){// Initialize MoveNet\nconst poseModel=await window.ml5.pose('MoveNet',{modelType:'lightning',enableSmoothing:true,enableTracking:true,minPoseScore:0.3});setPoseNet(poseModel);// Try to load existing neural network model\ntry{const nn=window.ml5.neuralNetwork('bjj-pose-model',()=>{setNeuralNetwork(nn);setIsModelLoaded(true);addLog('Trained model loaded successfully');},()=>{addLog('No trained model found. Please train a model first.');setIsModelLoaded(false);});}catch(error){addLog('Error loading trained model: '+error);setIsModelLoaded(false);}}}catch(error){console.error('Error loading models:',error);addLog('Error loading models: '+error);}};initModels();},[]);const addLog=message=>{const timestamp=new Date().toLocaleTimeString();setLogs(prev=>[...prev,`[${timestamp}] ${message}`]);};// Start video stream\nconst startVideo=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({video:{width:640,height:480,facingMode:'user'}});if(videoRef.current){videoRef.current.srcObject=stream;videoRef.current.play();setIsDetecting(true);addLog('Video stream started');}}catch(error){console.error('Error accessing webcam:',error);addLog('Error accessing webcam: '+error);}};// Stop video stream\nconst stopVideo=()=>{if(videoRef.current&&videoRef.current.srcObject){const stream=videoRef.current.srcObject;stream.getTracks().forEach(track=>track.stop());videoRef.current.srcObject=null;setIsDetecting(false);setCurrentPose(null);setPrediction(null);addLog('Video stream stopped');}};// Draw skeleton on canvas\nconst drawSkeleton=(ctx,pose)=>{const keypoints=pose.keypoints;const connections=[['nose','leftEye'],['nose','rightEye'],['leftEye','leftEar'],['rightEye','rightEar'],['leftShoulder','rightShoulder'],['leftShoulder','leftElbow'],['rightShoulder','rightElbow'],['leftElbow','leftWrist'],['rightElbow','rightWrist'],['leftShoulder','leftHip'],['rightShoulder','rightHip'],['leftHip','rightHip'],['leftHip','leftKnee'],['rightHip','rightKnee'],['leftKnee','leftAnkle'],['rightKnee','rightAnkle']];// Draw connections\nctx.strokeStyle='#00ff00';ctx.lineWidth=2;connections.forEach(_ref=>{let[start,end]=_ref;const startPoint=keypoints.find(kp=>kp.name===start);const endPoint=keypoints.find(kp=>kp.name===end);if(startPoint&&endPoint&&startPoint.score>0.3&&endPoint.score>0.3){ctx.beginPath();ctx.moveTo(startPoint.x,startPoint.y);ctx.lineTo(endPoint.x,endPoint.y);ctx.stroke();}});// Draw keypoints\nkeypoints.forEach(keypoint=>{if(keypoint.score>0.3){ctx.fillStyle=keypoint.score>0.7?'#ff0000':'#ffaa00';ctx.beginPath();ctx.arc(keypoint.x,keypoint.y,4,0,2*Math.PI);ctx.fill();}});};// Classify pose\nconst classifyPose=async pose=>{if(!neuralNetwork||!isClassifying){return;}try{const keypoints=pose.keypoints;const input=keypoints.flatMap(kp=>[kp.x,kp.y]);// Flatten to 34 values\nconst result=await neuralNetwork.classify(input);if(result&&result.length>0){const topResult=result[0];setPrediction({label:topResult.label,confidence:topResult.confidence});}}catch(error){console.error('Error classifying pose:',error);}};// Pose detection and classification loop\nuseEffect(()=>{let animationId;const detectAndClassify=async()=>{if(!poseNet||!videoRef.current||!canvasRef.current){return;}const video=videoRef.current;const canvas=canvasRef.current;const ctx=canvas.getContext('2d');if(!ctx||video.readyState!==4){animationId=requestAnimationFrame(detectAndClassify);return;}// Set canvas size\ncanvas.width=video.videoWidth;canvas.height=video.videoHeight;// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);try{// Detect poses\nconst detectedPoses=await poseNet.predict(video);if(detectedPoses.length>0){const pose=detectedPoses[0];// Use first detected pose\nsetCurrentPose(pose);// Draw skeleton\ndrawSkeleton(ctx,pose);// Classify pose if model is loaded and classification is enabled\nif(isModelLoaded&&isClassifying&&pose.score>0.5){await classifyPose(pose);}}else{setCurrentPose(null);setPrediction(null);}}catch(error){console.error('Error detecting pose:',error);}animationId=requestAnimationFrame(detectAndClassify);};if(isDetecting){detectAndClassify();}return()=>{if(animationId){cancelAnimationFrame(animationId);}};},[poseNet,isDetecting,isModelLoaded,isClassifying]);// Toggle classification\nconst toggleClassification=()=>{setIsClassifying(!isClassifying);if(!isClassifying){addLog('Pose classification started');}else{addLog('Pose classification stopped');setPrediction(null);}};// Reset classification\nconst resetClassification=()=>{setPrediction(null);addLog('Classification reset');};return/*#__PURE__*/_jsxs(\"div\",{className:\"component-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pose Testing\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Status\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Models: \",isModelLoaded?'Loaded':'Not Found']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Detection: \",isDetecting?'Active':'Inactive']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Classification: \",isClassifying?'Active':'Inactive']}),currentPose&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Pose Confidence: \",Math.round(currentPose.score*100),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[!isDetecting?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:startVideo,children:\"Start Detection\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:stopVideo,children:\"Stop Detection\"}),isModelLoaded&&/*#__PURE__*/_jsx(\"button\",{className:`btn ${isClassifying?'btn-danger':'btn-success'}`,onClick:toggleClassification,disabled:!isDetecting,children:isClassifying?'Stop Classification':'Start Classification'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:resetClassification,disabled:!isClassifying,children:\"Reset\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"video-container\",children:[/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"video-element\",autoPlay:true,muted:true,playsInline:true}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"canvas-overlay\"})]}),prediction&&/*#__PURE__*/_jsxs(\"div\",{className:\"pose-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pose-label\",children:[\"Detected: \",prediction.label]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confidence-score\",children:[Math.round(prediction.confidence*100),\"%\"]})]}),!isModelLoaded&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No Trained Model Found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please go to the \\\"Pose Training\\\" tab to train a model first.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Activity Log\"}),logs.map((log,index)=>/*#__PURE__*/_jsx(\"div\",{children:log},index))]})]});};export default PoseTesting;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","PoseTesting","videoRef","canvasRef","poseNet","setPoseNet","neuralNetwork","setNeuralNetwork","isModelLoaded","setIsModelLoaded","isDetecting","setIsDetecting","currentPose","setCurrentPose","prediction","setPrediction","isClassifying","setIsClassifying","logs","setLogs","initModels","window","ml5","poseModel","pose","modelType","enableSmoothing","enableTracking","minPoseScore","nn","addLog","error","console","message","timestamp","Date","toLocaleTimeString","prev","startVideo","stream","navigator","mediaDevices","getUserMedia","video","width","height","facingMode","current","srcObject","play","stopVideo","getTracks","forEach","track","stop","drawSkeleton","ctx","keypoints","connections","strokeStyle","lineWidth","_ref","start","end","startPoint","find","kp","name","endPoint","score","beginPath","moveTo","x","y","lineTo","stroke","keypoint","fillStyle","arc","Math","PI","fill","classifyPose","input","flatMap","result","classify","length","topResult","label","confidence","animationId","detectAndClassify","canvas","getContext","readyState","requestAnimationFrame","videoWidth","videoHeight","clearRect","detectedPoses","predict","cancelAnimationFrame","toggleClassification","resetClassification","className","children","round","onClick","disabled","ref","autoPlay","muted","playsInline","map","log","index"],"sources":["C:/Users/tjoha/Desktop/cursor/bjj-vision/frontend/src/components/PoseTesting.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\ninterface PoseKeypoint {\r\n  x: number;\r\n  y: number;\r\n  score: number;\r\n  name: string;\r\n}\r\n\r\ninterface Pose {\r\n  keypoints: PoseKeypoint[];\r\n  score: number;\r\n}\r\n\r\ninterface Prediction {\r\n  label: string;\r\n  confidence: number;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ml5: any;\r\n  }\r\n}\r\n\r\nconst PoseTesting: React.FC = () => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [poseNet, setPoseNet] = useState<any>(null);\r\n  const [neuralNetwork, setNeuralNetwork] = useState<any>(null);\r\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\r\n  const [isDetecting, setIsDetecting] = useState(false);\r\n  const [currentPose, setCurrentPose] = useState<Pose | null>(null);\r\n  const [prediction, setPrediction] = useState<Prediction | null>(null);\r\n  const [isClassifying, setIsClassifying] = useState(false);\r\n  const [logs, setLogs] = useState<string[]>([]);\r\n\r\n  // Initialize models\r\n  useEffect(() => {\r\n    const initModels = async () => {\r\n      try {\r\n        if (window.ml5) {\r\n          // Initialize MoveNet\r\n          const poseModel = await window.ml5.pose('MoveNet', {\r\n            modelType: 'lightning',\r\n            enableSmoothing: true,\r\n            enableTracking: true,\r\n            minPoseScore: 0.3\r\n          });\r\n          setPoseNet(poseModel);\r\n\r\n          // Try to load existing neural network model\r\n          try {\r\n            const nn = window.ml5.neuralNetwork('bjj-pose-model', () => {\r\n              setNeuralNetwork(nn);\r\n              setIsModelLoaded(true);\r\n              addLog('Trained model loaded successfully');\r\n            }, () => {\r\n              addLog('No trained model found. Please train a model first.');\r\n              setIsModelLoaded(false);\r\n            });\r\n          } catch (error) {\r\n            addLog('Error loading trained model: ' + error);\r\n            setIsModelLoaded(false);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading models:', error);\r\n        addLog('Error loading models: ' + error);\r\n      }\r\n    };\r\n\r\n    initModels();\r\n  }, []);\r\n\r\n  const addLog = (message: string) => {\r\n    const timestamp = new Date().toLocaleTimeString();\r\n    setLogs(prev => [...prev, `[${timestamp}] ${message}`]);\r\n  };\r\n\r\n  // Start video stream\r\n  const startVideo = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 640,\r\n          height: 480,\r\n          facingMode: 'user'\r\n        }\r\n      });\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        setIsDetecting(true);\r\n        addLog('Video stream started');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing webcam:', error);\r\n      addLog('Error accessing webcam: ' + error);\r\n    }\r\n  };\r\n\r\n  // Stop video stream\r\n  const stopVideo = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      const stream = videoRef.current.srcObject as MediaStream;\r\n      stream.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null;\r\n      setIsDetecting(false);\r\n      setCurrentPose(null);\r\n      setPrediction(null);\r\n      addLog('Video stream stopped');\r\n    }\r\n  };\r\n\r\n  // Draw skeleton on canvas\r\n  const drawSkeleton = (ctx: CanvasRenderingContext2D, pose: Pose) => {\r\n    const keypoints = pose.keypoints;\r\n    \r\n    const connections = [\r\n      ['nose', 'leftEye'], ['nose', 'rightEye'],\r\n      ['leftEye', 'leftEar'], ['rightEye', 'rightEar'],\r\n      ['leftShoulder', 'rightShoulder'],\r\n      ['leftShoulder', 'leftElbow'], ['rightShoulder', 'rightElbow'],\r\n      ['leftElbow', 'leftWrist'], ['rightElbow', 'rightWrist'],\r\n      ['leftShoulder', 'leftHip'], ['rightShoulder', 'rightHip'],\r\n      ['leftHip', 'rightHip'],\r\n      ['leftHip', 'leftKnee'], ['rightHip', 'rightKnee'],\r\n      ['leftKnee', 'leftAnkle'], ['rightKnee', 'rightAnkle']\r\n    ];\r\n\r\n    // Draw connections\r\n    ctx.strokeStyle = '#00ff00';\r\n    ctx.lineWidth = 2;\r\n    \r\n    connections.forEach(([start, end]) => {\r\n      const startPoint = keypoints.find(kp => kp.name === start);\r\n      const endPoint = keypoints.find(kp => kp.name === end);\r\n      \r\n      if (startPoint && endPoint && startPoint.score > 0.3 && endPoint.score > 0.3) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(startPoint.x, startPoint.y);\r\n        ctx.lineTo(endPoint.x, endPoint.y);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n\r\n    // Draw keypoints\r\n    keypoints.forEach(keypoint => {\r\n      if (keypoint.score > 0.3) {\r\n        ctx.fillStyle = keypoint.score > 0.7 ? '#ff0000' : '#ffaa00';\r\n        ctx.beginPath();\r\n        ctx.arc(keypoint.x, keypoint.y, 4, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Classify pose\r\n  const classifyPose = async (pose: Pose) => {\r\n    if (!neuralNetwork || !isClassifying) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const keypoints = pose.keypoints;\r\n      const input = keypoints.flatMap(kp => [kp.x, kp.y]); // Flatten to 34 values\r\n      \r\n      const result = await neuralNetwork.classify(input);\r\n      \r\n      if (result && result.length > 0) {\r\n        const topResult = result[0];\r\n        setPrediction({\r\n          label: topResult.label,\r\n          confidence: topResult.confidence\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error classifying pose:', error);\r\n    }\r\n  };\r\n\r\n  // Pose detection and classification loop\r\n  useEffect(() => {\r\n    let animationId: number;\r\n\r\n    const detectAndClassify = async () => {\r\n      if (!poseNet || !videoRef.current || !canvasRef.current) {\r\n        return;\r\n      }\r\n\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      if (!ctx || video.readyState !== 4) {\r\n        animationId = requestAnimationFrame(detectAndClassify);\r\n        return;\r\n      }\r\n\r\n      // Set canvas size\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n\r\n      // Clear canvas\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      try {\r\n        // Detect poses\r\n        const detectedPoses = await poseNet.predict(video);\r\n        \r\n        if (detectedPoses.length > 0) {\r\n          const pose = detectedPoses[0]; // Use first detected pose\r\n          setCurrentPose(pose);\r\n          \r\n          // Draw skeleton\r\n          drawSkeleton(ctx, pose);\r\n\r\n          // Classify pose if model is loaded and classification is enabled\r\n          if (isModelLoaded && isClassifying && pose.score > 0.5) {\r\n            await classifyPose(pose);\r\n          }\r\n        } else {\r\n          setCurrentPose(null);\r\n          setPrediction(null);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error detecting pose:', error);\r\n      }\r\n\r\n      animationId = requestAnimationFrame(detectAndClassify);\r\n    };\r\n\r\n    if (isDetecting) {\r\n      detectAndClassify();\r\n    }\r\n\r\n    return () => {\r\n      if (animationId) {\r\n        cancelAnimationFrame(animationId);\r\n      }\r\n    };\r\n  }, [poseNet, isDetecting, isModelLoaded, isClassifying]);\r\n\r\n  // Toggle classification\r\n  const toggleClassification = () => {\r\n    setIsClassifying(!isClassifying);\r\n    if (!isClassifying) {\r\n      addLog('Pose classification started');\r\n    } else {\r\n      addLog('Pose classification stopped');\r\n      setPrediction(null);\r\n    }\r\n  };\r\n\r\n  // Reset classification\r\n  const resetClassification = () => {\r\n    setPrediction(null);\r\n    addLog('Classification reset');\r\n  };\r\n\r\n  return (\r\n    <div className=\"component-container\">\r\n      <h2>Pose Testing</h2>\r\n      \r\n      <div className=\"status-display\">\r\n        <h3>Status</h3>\r\n        <p>Models: {isModelLoaded ? 'Loaded' : 'Not Found'}</p>\r\n        <p>Detection: {isDetecting ? 'Active' : 'Inactive'}</p>\r\n        <p>Classification: {isClassifying ? 'Active' : 'Inactive'}</p>\r\n        {currentPose && (\r\n          <p>Pose Confidence: {Math.round(currentPose.score * 100)}%</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        {!isDetecting ? (\r\n          <button className=\"btn btn-primary\" onClick={startVideo}>\r\n            Start Detection\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-danger\" onClick={stopVideo}>\r\n            Stop Detection\r\n          </button>\r\n        )}\r\n        {isModelLoaded && (\r\n          <button \r\n            className={`btn ${isClassifying ? 'btn-danger' : 'btn-success'}`}\r\n            onClick={toggleClassification}\r\n            disabled={!isDetecting}\r\n          >\r\n            {isClassifying ? 'Stop Classification' : 'Start Classification'}\r\n          </button>\r\n        )}\r\n        <button \r\n          className=\"btn btn-secondary\" \r\n          onClick={resetClassification}\r\n          disabled={!isClassifying}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"video-container\">\r\n        <video\r\n          ref={videoRef}\r\n          className=\"video-element\"\r\n          autoPlay\r\n          muted\r\n          playsInline\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          className=\"canvas-overlay\"\r\n        />\r\n      </div>\r\n\r\n      {prediction && (\r\n        <div className=\"pose-info\">\r\n          <div className=\"pose-label\">\r\n            Detected: {prediction.label}\r\n          </div>\r\n          <div className=\"confidence-score\">\r\n            {Math.round(prediction.confidence * 100)}%\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!isModelLoaded && (\r\n        <div className=\"status-display\">\r\n          <h3>No Trained Model Found</h3>\r\n          <p>Please go to the \"Pose Training\" tab to train a model first.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"log-section\">\r\n        <h3>Activity Log</h3>\r\n        {logs.map((log, index) => (\r\n          <div key={index}>{log}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PoseTesting; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}