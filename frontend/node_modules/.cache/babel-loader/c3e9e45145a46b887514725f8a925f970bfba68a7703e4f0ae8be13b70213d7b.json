{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PoseTraining=()=>{const videoRef=useRef(null);const canvasRef=useRef(null);const[poseNet,setPoseNet]=useState(null);const[neuralNetwork,setNeuralNetwork]=useState(null);const[isModelLoaded,setIsModelLoaded]=useState(false);const[isRecording,setIsRecording]=useState(false);const[isTraining,setIsTraining]=useState(false);const[poseLabel,setPoseLabel]=useState('');const[trainingData,setTrainingData]=useState([]);const[logs,setLogs]=useState([]);const[currentPose,setCurrentPose]=useState(null);// Initialize models\nuseEffect(()=>{const initModels=async()=>{try{if(window.ml5){// Initialize MoveNet\nconst poseModel=await window.ml5.pose('MoveNet',{modelType:'lightning',enableSmoothing:true,enableTracking:true,minPoseScore:0.3});setPoseNet(poseModel);// Initialize Neural Network\nconst nn=window.ml5.neuralNetwork({task:'classification',debug:true});setNeuralNetwork(nn);setIsModelLoaded(true);addLog('Models loaded successfully');}}catch(error){console.error('Error loading models:',error);addLog('Error loading models: '+error);}};initModels();},[]);const addLog=message=>{const timestamp=new Date().toLocaleTimeString();setLogs(prev=>[...prev,`[${timestamp}] ${message}`]);};// Start video stream\nconst startVideo=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({video:{width:640,height:480,facingMode:'user'}});if(videoRef.current){videoRef.current.srcObject=stream;videoRef.current.play();addLog('Video stream started');}}catch(error){console.error('Error accessing webcam:',error);addLog('Error accessing webcam: '+error);}};// Stop video stream\nconst stopVideo=()=>{if(videoRef.current&&videoRef.current.srcObject){const stream=videoRef.current.srcObject;stream.getTracks().forEach(track=>track.stop());videoRef.current.srcObject=null;addLog('Video stream stopped');}};// Start recording pose samples\nconst startRecording=()=>{if(!poseLabel.trim()){alert('Please enter a pose label first');return;}setIsRecording(true);addLog(`Started recording samples for: ${poseLabel}`);};// Stop recording pose samples\nconst stopRecording=()=>{setIsRecording(false);addLog(`Stopped recording. Total samples for ${poseLabel}: ${trainingData.filter(sample=>sample.output===poseLabel).length}`);};// Draw skeleton on canvas\nconst drawSkeleton=(ctx,pose)=>{const keypoints=pose.keypoints;const connections=[['nose','leftEye'],['nose','rightEye'],['leftEye','leftEar'],['rightEye','rightEar'],['leftShoulder','rightShoulder'],['leftShoulder','leftElbow'],['rightShoulder','rightElbow'],['leftElbow','leftWrist'],['rightElbow','rightWrist'],['leftShoulder','leftHip'],['rightShoulder','rightHip'],['leftHip','rightHip'],['leftHip','leftKnee'],['rightHip','rightKnee'],['leftKnee','leftAnkle'],['rightKnee','rightAnkle']];// Draw connections\nctx.strokeStyle='#00ff00';ctx.lineWidth=2;connections.forEach(_ref=>{let[start,end]=_ref;const startPoint=keypoints.find(kp=>kp.name===start);const endPoint=keypoints.find(kp=>kp.name===end);if(startPoint&&endPoint&&startPoint.score>0.3&&endPoint.score>0.3){ctx.beginPath();ctx.moveTo(startPoint.x,startPoint.y);ctx.lineTo(endPoint.x,endPoint.y);ctx.stroke();}});// Draw keypoints\nkeypoints.forEach(keypoint=>{if(keypoint.score>0.3){ctx.fillStyle=keypoint.score>0.7?'#ff0000':'#ffaa00';ctx.beginPath();ctx.arc(keypoint.x,keypoint.y,4,0,2*Math.PI);ctx.fill();}});};// Pose detection and recording loop\nuseEffect(()=>{let animationId;const detectAndRecord=async()=>{if(!poseNet||!videoRef.current||!canvasRef.current){return;}const video=videoRef.current;const canvas=canvasRef.current;const ctx=canvas.getContext('2d');if(!ctx||video.readyState!==4){animationId=requestAnimationFrame(detectAndRecord);return;}// Set canvas size\ncanvas.width=video.videoWidth;canvas.height=video.videoHeight;// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);try{// Detect poses\nconst detectedPoses=await poseNet.predict(video);if(detectedPoses.length>0){const pose=detectedPoses[0];// Use first detected pose\nsetCurrentPose(pose);// Draw skeleton\ndrawSkeleton(ctx,pose);// Record sample if recording\nif(isRecording&&pose.score>0.5){const keypoints=pose.keypoints;const input=keypoints.flatMap(kp=>[kp.x,kp.y]);// Flatten to 34 values\nconst newSample={input,output:poseLabel};setTrainingData(prev=>[...prev,newSample]);}}else{setCurrentPose(null);}}catch(error){console.error('Error detecting pose:',error);}animationId=requestAnimationFrame(detectAndRecord);};if(isModelLoaded){detectAndRecord();}return()=>{if(animationId){cancelAnimationFrame(animationId);}};},[poseNet,isModelLoaded,isRecording,poseLabel]);// Train the neural network\nconst trainModel=async()=>{if(!neuralNetwork||trainingData.length===0){alert('No training data available. Please record some poses first.');return;}setIsTraining(true);addLog('Starting model training...');try{// Add training data to neural network\ntrainingData.forEach((sample,index)=>{neuralNetwork.addData(sample.input,sample.output);if(index%10===0){addLog(`Added ${index+1}/${trainingData.length} samples`);}});// Train the model\nneuralNetwork.normalizeData();const trainingOptions={epochs:50,batchSize:32};neuralNetwork.train(trainingOptions,epoch=>{if(epoch&&epoch.logs){addLog(`Epoch ${epoch.epoch}: loss=${epoch.logs.loss.toFixed(4)}, accuracy=${epoch.logs.acc.toFixed(4)}`);}},()=>{addLog('Training completed!');setIsTraining(false);// Save model\nneuralNetwork.save('bjj-pose-model',()=>{addLog('Model saved successfully');});});}catch(error){console.error('Error training model:',error);addLog('Error training model: '+error);setIsTraining(false);}};// Clear training data\nconst clearData=()=>{setTrainingData([]);addLog('Training data cleared');};// Get sample counts by label\nconst getSampleCounts=()=>{const counts={};trainingData.forEach(sample=>{counts[sample.output]=(counts[sample.output]||0)+1;});return counts;};return/*#__PURE__*/_jsxs(\"div\",{className:\"component-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pose Training\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Status\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Models: \",isModelLoaded?'Loaded':'Loading...']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Recording: \",isRecording?'Active':'Inactive']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Training: \",isTraining?'In Progress':'Idle']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Samples: \",trainingData.length]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"poseLabel\",children:\"Pose Label:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"poseLabel\",type:\"text\",value:poseLabel,onChange:e=>setPoseLabel(e.target.value),placeholder:\"e.g., Armbar, Triangle Choke, Guard Pass\",disabled:isRecording})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:startVideo,children:\"Start Video\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:stopVideo,children:\"Stop Video\"}),!isRecording?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",onClick:startRecording,disabled:!poseLabel.trim()||!isModelLoaded,children:\"Start Recording\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:stopRecording,children:\"Stop Recording\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:trainModel,disabled:trainingData.length===0||isTraining,children:isTraining?'Training...':'Train Model'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:clearData,children:\"Clear Data\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"video-container\",children:[/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"video-element\",autoPlay:true,muted:true,playsInline:true}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"canvas-overlay\"})]}),currentPose&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Current Pose\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Confidence: \",Math.round(currentPose.score*100),\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Keypoints: \",currentPose.keypoints.filter(kp=>kp.score>0.3).length,\"/\",currentPose.keypoints.length]})]}),Object.keys(getSampleCounts()).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Training Data Summary\"}),Object.entries(getSampleCounts()).map(_ref2=>{let[label,count]=_ref2;return/*#__PURE__*/_jsxs(\"p\",{children:[label,\": \",count,\" samples\"]},label);})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Training Log\"}),logs.map((log,index)=>/*#__PURE__*/_jsx(\"div\",{children:log},index))]})]});};export default PoseTraining;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","PoseTraining","videoRef","canvasRef","poseNet","setPoseNet","neuralNetwork","setNeuralNetwork","isModelLoaded","setIsModelLoaded","isRecording","setIsRecording","isTraining","setIsTraining","poseLabel","setPoseLabel","trainingData","setTrainingData","logs","setLogs","currentPose","setCurrentPose","initModels","window","ml5","poseModel","pose","modelType","enableSmoothing","enableTracking","minPoseScore","nn","task","debug","addLog","error","console","message","timestamp","Date","toLocaleTimeString","prev","startVideo","stream","navigator","mediaDevices","getUserMedia","video","width","height","facingMode","current","srcObject","play","stopVideo","getTracks","forEach","track","stop","startRecording","trim","alert","stopRecording","filter","sample","output","length","drawSkeleton","ctx","keypoints","connections","strokeStyle","lineWidth","_ref","start","end","startPoint","find","kp","name","endPoint","score","beginPath","moveTo","x","y","lineTo","stroke","keypoint","fillStyle","arc","Math","PI","fill","animationId","detectAndRecord","canvas","getContext","readyState","requestAnimationFrame","videoWidth","videoHeight","clearRect","detectedPoses","predict","input","flatMap","newSample","cancelAnimationFrame","trainModel","index","addData","normalizeData","trainingOptions","epochs","batchSize","train","epoch","loss","toFixed","acc","save","clearData","getSampleCounts","counts","className","children","htmlFor","id","type","value","onChange","e","target","placeholder","disabled","onClick","ref","autoPlay","muted","playsInline","round","Object","keys","entries","map","_ref2","label","count","log"],"sources":["C:/Users/tjoha/Desktop/cursor/bjj-vision/frontend/src/components/PoseTraining.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\ninterface TrainingSample {\r\n  input: number[];\r\n  output: string;\r\n}\r\n\r\ninterface PoseKeypoint {\r\n  x: number;\r\n  y: number;\r\n  score: number;\r\n  name: string;\r\n}\r\n\r\ninterface Pose {\r\n  keypoints: PoseKeypoint[];\r\n  score: number;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ml5: any;\r\n  }\r\n}\r\n\r\nconst PoseTraining: React.FC = () => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [poseNet, setPoseNet] = useState<any>(null);\r\n  const [neuralNetwork, setNeuralNetwork] = useState<any>(null);\r\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isTraining, setIsTraining] = useState(false);\r\n  const [poseLabel, setPoseLabel] = useState('');\r\n  const [trainingData, setTrainingData] = useState<TrainingSample[]>([]);\r\n  const [logs, setLogs] = useState<string[]>([]);\r\n  const [currentPose, setCurrentPose] = useState<Pose | null>(null);\r\n\r\n  // Initialize models\r\n  useEffect(() => {\r\n    const initModels = async () => {\r\n      try {\r\n        if (window.ml5) {\r\n          // Initialize MoveNet\r\n          const poseModel = await window.ml5.pose('MoveNet', {\r\n            modelType: 'lightning',\r\n            enableSmoothing: true,\r\n            enableTracking: true,\r\n            minPoseScore: 0.3\r\n          });\r\n          setPoseNet(poseModel);\r\n\r\n          // Initialize Neural Network\r\n          const nn = window.ml5.neuralNetwork({\r\n            task: 'classification',\r\n            debug: true\r\n          });\r\n          setNeuralNetwork(nn);\r\n          setIsModelLoaded(true);\r\n          addLog('Models loaded successfully');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading models:', error);\r\n        addLog('Error loading models: ' + error);\r\n      }\r\n    };\r\n\r\n    initModels();\r\n  }, []);\r\n\r\n  const addLog = (message: string) => {\r\n    const timestamp = new Date().toLocaleTimeString();\r\n    setLogs(prev => [...prev, `[${timestamp}] ${message}`]);\r\n  };\r\n\r\n  // Start video stream\r\n  const startVideo = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 640,\r\n          height: 480,\r\n          facingMode: 'user'\r\n        }\r\n      });\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        addLog('Video stream started');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing webcam:', error);\r\n      addLog('Error accessing webcam: ' + error);\r\n    }\r\n  };\r\n\r\n  // Stop video stream\r\n  const stopVideo = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      const stream = videoRef.current.srcObject as MediaStream;\r\n      stream.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null;\r\n      addLog('Video stream stopped');\r\n    }\r\n  };\r\n\r\n  // Start recording pose samples\r\n  const startRecording = () => {\r\n    if (!poseLabel.trim()) {\r\n      alert('Please enter a pose label first');\r\n      return;\r\n    }\r\n    setIsRecording(true);\r\n    addLog(`Started recording samples for: ${poseLabel}`);\r\n  };\r\n\r\n  // Stop recording pose samples\r\n  const stopRecording = () => {\r\n    setIsRecording(false);\r\n    addLog(`Stopped recording. Total samples for ${poseLabel}: ${trainingData.filter(sample => sample.output === poseLabel).length}`);\r\n  };\r\n\r\n  // Draw skeleton on canvas\r\n  const drawSkeleton = (ctx: CanvasRenderingContext2D, pose: Pose) => {\r\n    const keypoints = pose.keypoints;\r\n    \r\n    const connections = [\r\n      ['nose', 'leftEye'], ['nose', 'rightEye'],\r\n      ['leftEye', 'leftEar'], ['rightEye', 'rightEar'],\r\n      ['leftShoulder', 'rightShoulder'],\r\n      ['leftShoulder', 'leftElbow'], ['rightShoulder', 'rightElbow'],\r\n      ['leftElbow', 'leftWrist'], ['rightElbow', 'rightWrist'],\r\n      ['leftShoulder', 'leftHip'], ['rightShoulder', 'rightHip'],\r\n      ['leftHip', 'rightHip'],\r\n      ['leftHip', 'leftKnee'], ['rightHip', 'rightKnee'],\r\n      ['leftKnee', 'leftAnkle'], ['rightKnee', 'rightAnkle']\r\n    ];\r\n\r\n    // Draw connections\r\n    ctx.strokeStyle = '#00ff00';\r\n    ctx.lineWidth = 2;\r\n    \r\n    connections.forEach(([start, end]) => {\r\n      const startPoint = keypoints.find(kp => kp.name === start);\r\n      const endPoint = keypoints.find(kp => kp.name === end);\r\n      \r\n      if (startPoint && endPoint && startPoint.score > 0.3 && endPoint.score > 0.3) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(startPoint.x, startPoint.y);\r\n        ctx.lineTo(endPoint.x, endPoint.y);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n\r\n    // Draw keypoints\r\n    keypoints.forEach(keypoint => {\r\n      if (keypoint.score > 0.3) {\r\n        ctx.fillStyle = keypoint.score > 0.7 ? '#ff0000' : '#ffaa00';\r\n        ctx.beginPath();\r\n        ctx.arc(keypoint.x, keypoint.y, 4, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Pose detection and recording loop\r\n  useEffect(() => {\r\n    let animationId: number;\r\n\r\n    const detectAndRecord = async () => {\r\n      if (!poseNet || !videoRef.current || !canvasRef.current) {\r\n        return;\r\n      }\r\n\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      if (!ctx || video.readyState !== 4) {\r\n        animationId = requestAnimationFrame(detectAndRecord);\r\n        return;\r\n      }\r\n\r\n      // Set canvas size\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n\r\n      // Clear canvas\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      try {\r\n        // Detect poses\r\n        const detectedPoses = await poseNet.predict(video);\r\n        \r\n        if (detectedPoses.length > 0) {\r\n          const pose = detectedPoses[0]; // Use first detected pose\r\n          setCurrentPose(pose);\r\n          \r\n          // Draw skeleton\r\n          drawSkeleton(ctx, pose);\r\n\r\n          // Record sample if recording\r\n          if (isRecording && pose.score > 0.5) {\r\n            const keypoints = pose.keypoints;\r\n            const input = keypoints.flatMap(kp => [kp.x, kp.y]); // Flatten to 34 values\r\n            \r\n            const newSample: TrainingSample = {\r\n              input,\r\n              output: poseLabel\r\n            };\r\n            \r\n            setTrainingData(prev => [...prev, newSample]);\r\n          }\r\n        } else {\r\n          setCurrentPose(null);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error detecting pose:', error);\r\n      }\r\n\r\n      animationId = requestAnimationFrame(detectAndRecord);\r\n    };\r\n\r\n    if (isModelLoaded) {\r\n      detectAndRecord();\r\n    }\r\n\r\n    return () => {\r\n      if (animationId) {\r\n        cancelAnimationFrame(animationId);\r\n      }\r\n    };\r\n  }, [poseNet, isModelLoaded, isRecording, poseLabel]);\r\n\r\n  // Train the neural network\r\n  const trainModel = async () => {\r\n    if (!neuralNetwork || trainingData.length === 0) {\r\n      alert('No training data available. Please record some poses first.');\r\n      return;\r\n    }\r\n\r\n    setIsTraining(true);\r\n    addLog('Starting model training...');\r\n\r\n    try {\r\n      // Add training data to neural network\r\n      trainingData.forEach((sample, index) => {\r\n        neuralNetwork.addData(sample.input, sample.output);\r\n        if (index % 10 === 0) {\r\n          addLog(`Added ${index + 1}/${trainingData.length} samples`);\r\n        }\r\n      });\r\n\r\n      // Train the model\r\n      neuralNetwork.normalizeData();\r\n      \r\n      const trainingOptions = {\r\n        epochs: 50,\r\n        batchSize: 32\r\n      };\r\n\r\n      neuralNetwork.train(trainingOptions, (epoch: any) => {\r\n        if (epoch && epoch.logs) {\r\n          addLog(`Epoch ${epoch.epoch}: loss=${epoch.logs.loss.toFixed(4)}, accuracy=${epoch.logs.acc.toFixed(4)}`);\r\n        }\r\n      }, () => {\r\n        addLog('Training completed!');\r\n        setIsTraining(false);\r\n        \r\n        // Save model\r\n        neuralNetwork.save('bjj-pose-model', () => {\r\n          addLog('Model saved successfully');\r\n        });\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error training model:', error);\r\n      addLog('Error training model: ' + error);\r\n      setIsTraining(false);\r\n    }\r\n  };\r\n\r\n  // Clear training data\r\n  const clearData = () => {\r\n    setTrainingData([]);\r\n    addLog('Training data cleared');\r\n  };\r\n\r\n  // Get sample counts by label\r\n  const getSampleCounts = () => {\r\n    const counts: { [key: string]: number } = {};\r\n    trainingData.forEach(sample => {\r\n      counts[sample.output] = (counts[sample.output] || 0) + 1;\r\n    });\r\n    return counts;\r\n  };\r\n\r\n  return (\r\n    <div className=\"component-container\">\r\n      <h2>Pose Training</h2>\r\n      \r\n      <div className=\"status-display\">\r\n        <h3>Status</h3>\r\n        <p>Models: {isModelLoaded ? 'Loaded' : 'Loading...'}</p>\r\n        <p>Recording: {isRecording ? 'Active' : 'Inactive'}</p>\r\n        <p>Training: {isTraining ? 'In Progress' : 'Idle'}</p>\r\n        <p>Total Samples: {trainingData.length}</p>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"poseLabel\">Pose Label:</label>\r\n        <input\r\n          id=\"poseLabel\"\r\n          type=\"text\"\r\n          value={poseLabel}\r\n          onChange={(e) => setPoseLabel(e.target.value)}\r\n          placeholder=\"e.g., Armbar, Triangle Choke, Guard Pass\"\r\n          disabled={isRecording}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button className=\"btn btn-primary\" onClick={startVideo}>\r\n          Start Video\r\n        </button>\r\n        <button className=\"btn btn-secondary\" onClick={stopVideo}>\r\n          Stop Video\r\n        </button>\r\n        {!isRecording ? (\r\n          <button \r\n            className=\"btn btn-success\" \r\n            onClick={startRecording}\r\n            disabled={!poseLabel.trim() || !isModelLoaded}\r\n          >\r\n            Start Recording\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-danger\" onClick={stopRecording}>\r\n            Stop Recording\r\n          </button>\r\n        )}\r\n        <button \r\n          className=\"btn btn-primary\" \r\n          onClick={trainModel}\r\n          disabled={trainingData.length === 0 || isTraining}\r\n        >\r\n          {isTraining ? 'Training...' : 'Train Model'}\r\n        </button>\r\n        <button className=\"btn btn-secondary\" onClick={clearData}>\r\n          Clear Data\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"video-container\">\r\n        <video\r\n          ref={videoRef}\r\n          className=\"video-element\"\r\n          autoPlay\r\n          muted\r\n          playsInline\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          className=\"canvas-overlay\"\r\n        />\r\n      </div>\r\n\r\n      {currentPose && (\r\n        <div className=\"status-display\">\r\n          <h3>Current Pose</h3>\r\n          <p>Confidence: {Math.round(currentPose.score * 100)}%</p>\r\n          <p>Keypoints: {currentPose.keypoints.filter(kp => kp.score > 0.3).length}/{currentPose.keypoints.length}</p>\r\n        </div>\r\n      )}\r\n\r\n      {Object.keys(getSampleCounts()).length > 0 && (\r\n        <div className=\"status-display\">\r\n          <h3>Training Data Summary</h3>\r\n          {Object.entries(getSampleCounts()).map(([label, count]) => (\r\n            <p key={label}>{label}: {count} samples</p>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"log-section\">\r\n        <h3>Training Log</h3>\r\n        {logs.map((log, index) => (\r\n          <div key={index}>{log}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PoseTraining; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}